buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.energizedwork.webdriver-binaries:webdriver-binaries-gradle-plugin:1.1"
        classpath "gradle.plugin.com.energizedwork:idea-gradle-plugins:1.4"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.6"
        classpath "org.grails.plugins:views-gradle:1.2.7"
        // this is the gwt gradle plug0-in
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
    }
}

version "9.1.1.beta"
group "las"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.energizedwork.webdriver-binaries"
apply plugin:"com.energizedwork.idea-project-components"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
// For json views
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.plugins.views-json"
// Add the GWT plug-in RHS
apply plugin: 'gwt'


repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://artifacts.unidata.ucar.edu/repository/unidata-all" }
}
ext {
    unidata_version = '5.3.2'
}
dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.6"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.6.0"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:3.6.0"
    testRuntime "org.seleniumhq.selenium:selenium-remote-driver:3.6.0"
    testRuntime "org.seleniumhq.selenium:selenium-api:3.6.0"
    // Grails needed to make JSON views for custom renderings
    compile "org.grails.plugins:views-json-templates:2.0.0.RC2"

    // Mine
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'

//  4.6.14
//    compile "edu.ucar:cdm:${unidata_version}"
//    runtime "edu.ucar:cdm:${unidata_version}"

//  4.6.14
//    compile "edu.ucar:clcommon:${unidata_version}"
//    runtime "edu.ucar:clcommon:${unidata_version}"

    // 4.6.14
//    compile "edu.ucar:visadCdm:${unidata_version}"
//    runtime "edu.ucar:visadCdm:${unidata_version}"

//    5.+
    compile "edu.ucar:cdm-core:${unidata_version}"
    runtime "edu.ucar:cdm-core:${unidata_version}"

//    5.+
    compile "edu.ucar:cdm-radial:${unidata_version}"
    runtime "edu.ucar:cdm-radial:${unidata_version}"

//    5.+
    compile "edu.ucar:cdm-misc:${unidata_version}"
    runtime "edu.ucar:cdm-misc:${unidata_version}"

//    5.+
    compile "edu.ucar:cdm-image:${unidata_version}"
    runtime "edu.ucar:cdm-image:${unidata_version}"

    compile "edu.ucar:bufr:${unidata_version}"
    runtime "edu.ucar:bufr:${unidata_version}"

    compile "edu.ucar:grib:${unidata_version}"
    runtime "edu.ucar:grib:${unidata_version}"

    compile "edu.ucar:netcdf4:${unidata_version}"
    runtime "edu.ucar:netcdf4:${unidata_version}"

    compile "edu.ucar:opendap:${unidata_version}"
    runtime "edu.ucar:opendap:${unidata_version}"

//    5.+
    compile "edu.ucar:cdm-vis5d:${unidata_version}"
    runtime "edu.ucar:cdm-vis5d:${unidata_version}"

//    5.+
    compile "edu.ucar:cdm-mcidas:${unidata_version}"
    runtime "edu.ucar:cdm-mcidas:${unidata_version}"

    // Mine for JODA Time from Maven central
    compile 'joda-time:joda-time:2.7'
    runtime 'joda-time:joda-time:2.7'

    // https://mvnrepository.com/artifact/jdom/jdom
    compile group: 'jdom', name: 'jdom', version: '1.1'

    // https://mvnrepository.com/artifact/com.google.visualization/visualization-datasource
    compile group: 'com.google.visualization', name: 'visualization-datasource', version: '1.1.1'

    // Get a gwt sdk for plugin to use
    compile group: 'com.google.gwt', name: 'gwt-dev', version: '2.8.2'
    
    // Required for running production using MySQL
    runtime 'mysql:mysql-connector-java:5.1.29'

    // Quartz and Schwartz for job scheduling..

    String quartzVersion = '2.2.3'
    compile 'org.quartz-scheduler:quartz:' + quartzVersion, {
        exclude module: 'c3p0'
    }
    compile 'org.quartz-scheduler:quartz-jobs:' + quartzVersion
    compile 'com.agileorbit:schwartz:1.0.1'

    // https://github.com/nerdErg/grails-shiro
    // for access control
    compile "org.grails.plugins:grails-shiro:3.1"


}

// My stuff -- RHS

// GWT Modules
gwt {
    modules 'pmel.sdig.las.UI,pmel.sdig.installer.Admin'
    compileGwt.enabled = false;
}

// Source set for the GWT source so Intellij knows it's source code
sourceSets {
    client {
        java {
            srcDirs = ['gwtui','gwtadmin']
        }
    }
}
// Library directory for the GWT code so that Intellij knows where this stuff is
dependencies {
    clientCompile fileTree(dir: './lib', include: '*.jar')
}

// A task to compile the GWT code using a scripts, 'cause that's what I find easiest
task compileGWT (type:Exec) {
    commandLine 'sh','./GWT-compile'
}

task compileAngular (type:Exec) {
    commandLine 'sh','./build-admin.sh'
}

// Make the assembly of the war file depend on compiling the GWT
war.dependsOn compileGWT, compileAngular

// end of my stuff

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

webdriverBinaries {
    chromedriver '2.32'
    geckodriver '0.18.0'
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "webdriver.chrome.driver", System.getProperty('webdriver.chrome.driver')
    systemProperty "webdriver.gecko.driver", System.getProperty('webdriver.gecko.driver')
}

assets {
    minifyJs = true
    minifyCss = true
}
